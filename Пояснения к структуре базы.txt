1. Структура БД приложена в виде скрипта генерации, диаграммы в формате .mwb и скриншота.

2. Сущность "Товар" по моему мнение, должна включать в себя:
  *)id - для уникальной идентификации внутри базы
  *)code - артикул или любое иное закодированное обозначение(для идентификации пользователями сервиса а также для целей штрихкодирования)
  *)name - собственно название товара
  *)shortname - краткое имя для вывода в различных представлениях.
  *)description - описание товара

  Большинство других свойств, которые приходят в голову, должны содержаться в виде наборов свойств в других таблицах -
  я даже категории вынес в отдельную таблицу, хотя вопрос дискуссионный, на мой взгляд товар может иметь несколько, ниже поясню.

3.Организация и версионирование цен:

  Тут хотел предложить альтернативную трем ценам идею, в качестве варианта на рассмотрение - создать таблицу с колонками "дата","товар","цена"
  дата и товар - основной ключ, дата показывает, с какого периода цена актуальна. Как только появляется цена с более свежим периодом - 
  начинаем использовать её. При такой схеме хранится полная история цен на каждый товар, не ограниченная тремя ценами.

  В качестве дополнительного инструмента управления ценами (скидки, спеццены и т.д.) создал таблицу price_types,
  которая содержит имя типа цены и процент от основной цены(прайс листа) - схема намеренно упрощенная, просто чтобы было) Тип цен добавляем в заказ
  и в зависимости от него пересчитываем цены из прайс-листа.C этой целью цены заказа отдельно хранятся в нем.
  
  А так про систему скидок и бонусов можно отдельный модуль в магазине запилить, если не будет возражений и не слишком простой вариант - готов взяться 
  за это дело в рамках дополнительного вклада в проект.

4.Организация категорий:

 Предлагаю создать таблицу категорий, в которой помимо id и имени категорий добавить колонку "родитель", в которую будет записываться
 id сущности из этой таблицы, текущая сущность является чьей-то подкатегорией - так можно просто реализовать любую
 структуру вложенности сущностей, а также, при необходимости, наследовать наборы свойств, характерных для категории
 расширяя их.

 Также создал таблицу features свойств товаров и две таблицы для связи:
   Первая - товар,свойство,значение - определить какие свойства есть у товара и какое значение они принимают.
   Вторая - связь категорий и свойств - определяем характерные наборы свойств для категории с целью выведения списка отборов и автозаполнения списка свойств
            новых товаров при выборе им категории. 

5.Заказы:

  Предлагаю в упрощенной форме реализовать заказ как две таблицы:
	Первая - содержит "шапку" заказа (id,номер,дата,тип цен, клиент (в моем варианте только для зарегистрированных), адрес доставки и т.д.)
	Вторая - связь по id с первой, содержит товары заказа, их количество, цену и сумму по линии.

